James's notes and other ramblings

This is a very skeletal structure of what the Engine class would be. It will require common methods and attributes
from Logic, Board, State, and Player. Right now, there are two methods: executeMove() and nextPlayersTurn(). 

executeMove(): This method has two primary functions: check if a move is valid and make the move if it is. To fully carry out these functions, it
needs several common methods that currently vary in implementation between games. The method for making a move varies between Eels, TicTacToe/Checkers, and 
Simon Says. The move method should be moved to a single superclass in order for the engine to run. The logic class should also have a way of checking 
valid moves.

nextPlayersTurn(): This method determines which player goes, and then processes their turn while checking for win conditions. This method is a little simpler
because the only common method it currently requires is a checkWinCondition() from Logic. Of course, implementation of the checkWinCondition() method
will need to be standardized for inputs.